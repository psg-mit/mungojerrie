// Simple gambler's ruin model in which the gambler chooses the stakes.
// From Sutton and Barto.

mdp

const int Wealth = 50;  // initial wealth
const double p   = 1/2; // probability of winning

label "ruin" = x = 0;
label "goal" = x = 100;

module gambler
  x : [0..100] init Wealth;

  [b0]  x=0  | x=100 -> true;
  [b1]  x>0  & x<100 -> p : (x'=x+1)  + (1-p) : (x'=x-1);
  [b2]  x>1  & x<99  -> p : (x'=x+2)  + (1-p) : (x'=x-2);
  [b3]  x>2  & x<98  -> p : (x'=x+3)  + (1-p) : (x'=x-3);
  [b4]  x>3  & x<97  -> p : (x'=x+4)  + (1-p) : (x'=x-4);
  [b5]  x>4  & x<96  -> p : (x'=x+5)  + (1-p) : (x'=x-5);
  [b6]  x>5  & x<95  -> p : (x'=x+6)  + (1-p) : (x'=x-6);
  [b7]  x>6  & x<94  -> p : (x'=x+7)  + (1-p) : (x'=x-7);
  [b8]  x>7  & x<93  -> p : (x'=x+8)  + (1-p) : (x'=x-8);
  [b9]  x>8  & x<92  -> p : (x'=x+9)  + (1-p) : (x'=x-9);
  [b10] x>9  & x<91  -> p : (x'=x+10) + (1-p) : (x'=x-10);
  [b11] x>10 & x<90  -> p : (x'=x+11) + (1-p) : (x'=x-11);
  [b12] x>11 & x<89  -> p : (x'=x+12) + (1-p) : (x'=x-12);
  [b13] x>12 & x<88  -> p : (x'=x+13) + (1-p) : (x'=x-13);
  [b14] x>13 & x<87  -> p : (x'=x+14) + (1-p) : (x'=x-14);
  [b15] x>14 & x<86  -> p : (x'=x+15) + (1-p) : (x'=x-15);
  [b16] x>15 & x<85  -> p : (x'=x+16) + (1-p) : (x'=x-16);
  [b17] x>16 & x<84  -> p : (x'=x+17) + (1-p) : (x'=x-17);
  [b18] x>17 & x<83  -> p : (x'=x+18) + (1-p) : (x'=x-18);
  [b19] x>18 & x<82  -> p : (x'=x+19) + (1-p) : (x'=x-19);
  [b20] x>19 & x<81  -> p : (x'=x+20) + (1-p) : (x'=x-20);
  [b21] x>20 & x<80  -> p : (x'=x+21) + (1-p) : (x'=x-21);
  [b22] x>21 & x<79  -> p : (x'=x+22) + (1-p) : (x'=x-22);
  [b23] x>22 & x<78  -> p : (x'=x+23) + (1-p) : (x'=x-23);
  [b24] x>23 & x<77  -> p : (x'=x+24) + (1-p) : (x'=x-24);
  [b25] x>24 & x<76  -> p : (x'=x+25) + (1-p) : (x'=x-25);
  [b26] x>25 & x<75  -> p : (x'=x+26) + (1-p) : (x'=x-26);
  [b27] x>26 & x<74  -> p : (x'=x+27) + (1-p) : (x'=x-27);
  [b28] x>27 & x<73  -> p : (x'=x+28) + (1-p) : (x'=x-28);
  [b29] x>28 & x<72  -> p : (x'=x+29) + (1-p) : (x'=x-29);
  [b30] x>29 & x<71  -> p : (x'=x+30) + (1-p) : (x'=x-30);
  [b31] x>30 & x<70  -> p : (x'=x+31) + (1-p) : (x'=x-31);
  [b32] x>31 & x<69  -> p : (x'=x+32) + (1-p) : (x'=x-32);
  [b33] x>32 & x<68  -> p : (x'=x+33) + (1-p) : (x'=x-33);
  [b34] x>33 & x<67  -> p : (x'=x+34) + (1-p) : (x'=x-34);
  [b35] x>34 & x<66  -> p : (x'=x+35) + (1-p) : (x'=x-35);
  [b36] x>35 & x<65  -> p : (x'=x+36) + (1-p) : (x'=x-36);
  [b37] x>36 & x<64  -> p : (x'=x+37) + (1-p) : (x'=x-37);
  [b38] x>37 & x<63  -> p : (x'=x+38) + (1-p) : (x'=x-38);
  [b39] x>38 & x<62  -> p : (x'=x+39) + (1-p) : (x'=x-39);
  [b40] x>39 & x<61  -> p : (x'=x+40) + (1-p) : (x'=x-40);
  [b41] x>40 & x<60  -> p : (x'=x+41) + (1-p) : (x'=x-41);
  [b42] x>41 & x<59  -> p : (x'=x+42) + (1-p) : (x'=x-42);
  [b43] x>42 & x<58  -> p : (x'=x+43) + (1-p) : (x'=x-43);
  [b44] x>43 & x<57  -> p : (x'=x+44) + (1-p) : (x'=x-44);
  [b45] x>44 & x<56  -> p : (x'=x+45) + (1-p) : (x'=x-45);
  [b46] x>45 & x<55  -> p : (x'=x+46) + (1-p) : (x'=x-46);
  [b47] x>46 & x<54  -> p : (x'=x+47) + (1-p) : (x'=x-47);
  [b48] x>47 & x<53  -> p : (x'=x+48) + (1-p) : (x'=x-48);
  [b49] x>48 & x<52  -> p : (x'=x+49) + (1-p) : (x'=x-49);
  [b50] x>49 & x<51  -> p : (x'=x+50) + (1-p) : (x'=x-50);
endmodule
