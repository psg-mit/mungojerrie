mdp

const int N = 5;
const int M = 3;
const double p = 3/4;

formula enable = b0+b1+b2+b3+b4 > 1;

module pluck
  b0 : [0..M] init M;
  b1 : [0..M] init M;
  b2 : [0..M] init M;
  b3 : [0..M] init M;
  b4 : [0..M] init M;

  [a0] enable -> p : (b0' = b0 > 0 ? b0-1 : b0) + (1-p) : true;
  [a1] enable -> p : (b1' = b1 > 0 ? b1-1 : b1) + (1-p) : true;
  [a2] enable -> p : (b2' = b2 > 0 ? b2-1 : b2) + (1-p) : true;
  [a3] enable -> p : (b3' = b3 > 0 ? b3-1 : b3) + (1-p) : true;
  [a4] enable -> p : (b4' = b4 > 0 ? b4-1 : b4) + (1-p) : true;
  [rest] !enable -> true;
endmodule

label "p0" = b0 = 1;
label "p1" = b1 = 1;
label "p2" = b2 = 1;
label "p3" = b3 = 1;
label "p4" = b4 = 1;
