// Three-operand binary addition MDP.

mdp

label "a"   = a;
label "odd" = a & mod(i+c,2) = 1;
label "mj1" = a & (i+c > 1) & (i+c < 4);
label "mj2" = a & (i+c > 3);
label "co1" = !a & c=1;
label "co2" = !a & c=2;
label "o"   = !a & o=1;

module add
  o : [0..1] init 0;
  c : [0..2] init 0;
  i : [0..3] init 0;

  [read] !a -> 1/8 : (i'=0) + 3/8 : (i'=1) + 3/8 : (i'=2) + 1/8 : (i'=3);
  [w00]   a -> (o'=0) & (c'=0);
  [w01]   a -> (o'=0) & (c'=1);
  [w02]   a -> (o'=0) & (c'=2);
  [w10]   a -> (o'=1) & (c'=0);
  [w11]   a -> (o'=1) & (c'=1);
  [w12]   a -> (o'=1) & (c'=2);
endmodule

module turn
  a : bool init false;

  [read] !a -> (a'=true);
  [w00]   a -> (a'=false);
  [w01]   a -> (a'=false);
  [w02]   a -> (a'=false);
  [w10]   a -> (a'=false);
  [w11]   a -> (a'=false);
  [w12]   a -> (a'=false);
endmodule